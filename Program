#include <EEPROM.h>
#include <SoftwareSerial.h>
#include <LiquidCrystal.h>
#include<stdio.h>
#include<String.h>
LiquidCrystallcd(3,4,5,6,7,8);
/**********************************************************INTEGER*******************************************************************/
char mystrcmp(unsigned char *temp);                               
char num [ 11 ] ;
char phone_index ;
//bit send_fail;
char display(int index,int count);
void edit_number_position( int pos ,int max);
void edit_num( );
void edit_bal(int pos_dig);    
void edit_number(int pos_dig);
int stringtoint(char * string);
void retrieve_phone_num();
void save_phone_num();
char get_key (char flag );
unsigned char* get_string_gsm();
void gsm_control(); 
char send_message(char *number,char*message);
char temp;

/*******************************************************************INTEGER END*************************************************/
// int phone_index ;
int buttonPin=  14; //menu
int buttonPin1 = 15; //up
int buttonPin2 = 16; //down
int buttonPin3 = 17; //edit     
int ledd , z , n , m , y , v;
int buttonState , buttonState1  , buttonState2 , buttonState3, objectState;
int A , B = 0;
/*******************************************************************INTEGER END*************************************************/
/********************************************VOLTAGE SENSOR***********************************************************************/
const int RELAY = A5;
const int s1Pin = A2;     
int s1State = 0;
const int s2Pin = A1;     
int s2State = 0;
const int s3Pin = A3;     
int s3State = 0;
const int s4Pin = A4;     
int s4State = 0;
const int s5Pin = 10;     
int s5State = 0;
const int s6Pin = 11;     
int s6State = 0;
const int s7Pin = 12;     
int s7State = 0;
int Y = 1;        // value read from the pot
/*************************************************VOLTAGE END*********************************************************************/
 unsigned char gsm_string[15] ;                 
/****************************************************PHONE NUMBER ENTRY***********************************************************/
 int b,a;
int zz = 0;
void setup() {
lcd.begin(16, 2);//lcdinitilized
Serial.begin(9600);//serial initilized
pinMode(buttonPin, OUTPUT); //menu
pinMode(buttonPin1, OUTPUT); //up
pinMode(buttonPin2, OUTPUT); //dOWN
pinMode(buttonPin3, OUTPUT); //edit
pinMode(RELAY, OUTPUT);
pinMode(s1Pin , INPUT);
pinMode(s2Pin , INPUT);
pinMode(s3Pin , INPUT);
pinMode(s4Pin , INPUT);
pinMode(s5Pin , INPUT);
pinMode(s6Pin , INPUT);
pinMode(s7Pin , INPUT);
lcd.setCursor(0,0);
lcd.print("Military suit");
lcd.setCursor(0,1);
lcd.print("                                                                          ");
for (int positionCounter = 0; positionCounter< 80; positionCounter++) {
// scroll one position left:
lcd.scrollDisplayRight();
// wait a bit:
delay(100);
 }
delay(2000);
lcd.clear();
lcd.setCursor(0,0);
lcd.print( "CONFIGURE  MODEM" ) ;
Serial.print("ATE0");
Serial.print("\r\n");
delay ( 500 ) ;
Serial.print("AT+CMGF=1");
Serial.print("\r\n");
delay ( 500 ) ;
Serial.print("at+cnmi=2,2,0,0,0");
Serial.print("\r\n");
delay ( 500 ) ;
lcd.setCursor(0,0);
// _lcd_ready();  
for ( z = 0 ; z <3 ; z++ )
{ 
delay( 50 ) ;
Serial.print("at+cmgd=");
if (z==0) Serial.print("0"); 
if (z==1) Serial.print("1");
if (z==2) Serial.print("2");
Serial.print("\r\n");
delay ( 10 ) ;
}
char ch{100};
char getchar1(){
char data;
int counter = 2;
while ( Serial.available()<=0 )
{
delay( 10 ) ;
counter-- ;
if ( counter == 0 )
return 0 ;
}
data = Serial.read();
return data;
}
char la[]= "11.8248° N, 77.9334° E " ;
//char la[]= "11.82/4° E " ;
int nn = 0;
void loop()
{ 
 int temp;
 int set_temp;
 int current;
 for ( temp = 0 ; temp<6 ; temp++ )
{
 if (display(temp,1)==0)
{
display(temp,0);
edit_num();
}
}
lcd.clear();
while(1)
{
s1State = digitalRead(s1Pin);
s2State = digitalRead(s2Pin);
s3State = digitalRead(s3Pin);
s4State = digitalRead(s4Pin);
s5State = digitalRead(s5Pin);
s6State = digitalRead(s6Pin);
s7State = digitalRead(s7Pin);
lcd.setCursor(0,0);
lcd.print(" SENDING MESSAGE");
lcd.setCursor(0,1);
lcd.print("   ");
lcd.print(&phone_num[ i  ][0]);
lcd.print("   ");
Serial.flush();
n = 1;   
delay(250);
n = 0;  
lcd.clear();
 }
if  (s6State == LOW && n == 0) 
 { 
lcd.setCursor(0,1);
lcd.print(" CANCELLED");
delay(1000);
for(int i =0;i<4;i++)
{
lcd.setCursor(0,0);
lcd.print(" SENDING MESSAGE");
lcd.setCursor(0,1);
lcd.print("   ");
Serial.write(0X1A);
delay(5000);
}
Serial.flush();
n = 1;   
delay(250);
n = 0;  
lcd.clear();
}
/*********************************************DETECTOR *********************************************/
if  (s1State == LOW &&nn == 0)
{
a= 25;
if  (s2State == LOW &&nn == 0)
{
a= a + 25;
if  (s3State == LOW &&nn == 0)
{
a= a + 25;
if  (s4State == LOW &&nn == 0)
{
a= a + 25;
}
}
}
}
else if  (s1State == HIGH && s2State == HIGH &&  s3State == HIGH &&  s4State == HIGH && s7State == LOW ) 
{
a=0;
lcd.setCursor(0,1);
lcd.print(" SAFE ");
int stringtoint(char * string)
{
int numlength,temp,i,temp1=0;
numlength = strlen(string);
for(i = 0 ; i<numlength ; i++)
{    
temp1 = temp1*10; 
temp = string[i];
temp = temp & 0x0F;
//temp = temp * 10 ;
temp1 = temp + temp1 ;
}         
return temp1 ;
} 
char display(int index,int count)
{
int time_counter=0;
lcd.clear() ;
lcd.setCursor(0,0);
/***************************************************EDIT *********************************/   {
val='S';
break ;
}
else if ( buttonState1 == LOW )
{   
val='U';
break ;
}
else if ( buttonState2 == LOW )
{
val='D';
break ;
}
else if ( buttonState3 == LOW )
{
val='E';
break ;
}
}
while(1)
{
digitalWrite(buttonPin3,HIGH);
digitalWrite(buttonPin2,HIGH);
digitalWrite(buttonPin1,HIGH);
digitalWrite(buttonPin,HIGH);
buttonState = digitalRead(buttonPin);
 buttonState1 = digitalRead(buttonPin1);
buttonState2 = digitalRead(buttonPin2);
buttonState3 = digitalRead(buttonPin3);    
if ( (buttonState==LOW)||(buttonState1==LOW)||(buttonState2==LOW)||(buttonState3==LOW))
continue;
else
break;
}
 return val ;
}
/*********************************************************Edit number********************************************/
void edit_num( )
{
edit_number_position( phone_index ,10) ;
strcpy(&phone_num[phone_index][0] , num);
save_phone_num();
delay(400);
//send_message(&phone_num[phone_index][0],"HI! HOW ARE YOU");
}
 void edit_number_position( int pos ,int maxi)
{
 int pos_dig = 0 ;
strcpy( num , &phone_num [ pos ] [ 0 ] ) ;
lcd.cursor();
lcd.setCursor(3+pos_dig,1);
while(1)
{
lcd.cursor();
lcd.setCursor(3+pos_dig,1);
delay(2); 
switch(get_key())
{
case 'U':
if(pos_dig == 0)
pos_dig = maxi-1 ;
else
pos_dig--;
break ;
case 'D':
if ( pos_dig == maxi-1 )
pos_dig = 0;
else
pos_dig++ ;
break ;
case 'E' :
lcd.setCursor(15,1);
lcd.print('s');
lcd.setCursor(3+pos_dig,1);  //set cursor to editing position
edit_number(pos_dig);
break ;
case 'S' :
lcd.clear();
lcd.noCursor();
lcd.print("     SAVED     ");
return ;
break;
}
}
}
void edit_number(int pos_dig)
{ 
char val ;
val = num [ pos_dig ] ;
while(1)
{
switch(get_key())
{
case 'U':
if(val == '0')
val = '9' ;
else
val--;
break ;
 case 'D':
if(val == '9')
val = '0' ;
else
val++;
break ;
case 'S' :
lcd.setCursor(15,1);
lcd.print(' ');
return ;
break ;
}
lcd.setCursor(3+pos_dig,1);
num[pos_dig] = val ;
lcd.print(val);
lcd.setCursor(3+pos_dig,1);
}
}
void save_phone_num()
{
int i , j ,k=0;
for ( i = 0 ; i< 8; i++ )
{
for ( j = 0 ; phone_num [ i ]  [ j ] != '\0' ; j++ )
{
k++;
EEPROM.write(k,phone_num [ i ] [ j ]  );//for write
}
k++;
EEPROM.write(k,'\0');
}
}    
void retrieve_phone_num()
{
int i,j,k=1;
char l ;
for ( i = 0 ; i< 8 ; i++ )
{    
l=(char)EEPROM.read(k);delay(100);
for ( j = 0 ; l!= '\0' ; j++ )
{
phone_num [ i ] [ j ]  = l  ;
k++;
l=(char)EEPROM.read(k);
delay(100);
}
phone_num [ i ] [ j ]  ='\0';
k++;
}
}
